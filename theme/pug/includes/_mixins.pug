//- pug mixins

mixin fa( $icon, $prefix, $option )
  -
    let fahtml = ''
    try {
      fahtml = fontawesome.icon({ prefix: ( $prefix || "fas" ), iconName: $icon },( $option || {} )).html[0]
    } catch(e) {
      console.log(`Can't pick up icon: ${$icon}, ${$prefix ? $prefix : 'type not set (fas)'}`)
    }
  i(class=`fa ${ $prefix || "fas" } ${$icon}`)!=fahtml

mixin fa_fw( $icon, $prefix )
  +fa( $icon, $prefix, {classes: ['fa-fw']})

mixin toc( headings, n, tag, cl)
  -
    function lv(a, b, ht){
      let r = a - b
      for(let j=0; r > j; j++){
        o += ht
      }
    }
    let o = `<${tag} class="${cl} m-0 p-0">`
    for(let i = 0; headings.length > i; i++){
      let now = headings[i], prev
      if (now.number < n)
        continue
      if (i == 0)
        prev = {number: n}
      else
        prev = headings[i - 1]
      if ( i == 0 || now.number > prev.number )
        lv(now.number, prev.number, `<${tag} class="${cl}">`)
      else if ( now.number < prev.number )
        lv(prev.number, now.number, `</${tag}>`)
      o += `<li><a href="#${now.id}">${now.text}</a></li>`
    }
    o += `</${tag}>`
  != o

mixin lis_of_dir(pathf, $option)
  -
    function pathMFilter(pathf){
      return pages.filter(function(e,i,a){
        if( typeof pathf === "string" ){
          return e.meta.permalink.indexOf(`${pathf}`) == 0 && e.meta.permalink.replace(`${pathf}`, "") != "" && e.meta.permalink.split('/').length == pathf.split('/').length + 1
        } else if (typeof pathf === "object" && Array.isArray(pathf) ){
          for( c = 0; c < pathf.length; c++ ){
            if( e.meta.permalink.indexOf(`${pathf[c]}`) == 0 && e.meta.permalink.replace(`${pathf[c]}`, "") != "" && e.meta.permalink.split('/').length == pathf.split('/').length + 1) return true
          }
        }
      })
    }
    let bpages = pathMFilter(pathf)
    bpages.sort( (a, b) => { return ( a.meta.permalink > b.meta.permalink ) ? 1 : -1 } )
    bpages.sort( (a, b) => a.attributes.rank - b.attributes.rank )
  each rpage in bpages
    li.mb-1
      a.d-block(href=`${site.url.path}${rpage.meta.permalink}`)
        div=rpage.attributes.title
        div.small.lh-12=rpage.attributes.description
      if($option.s == true && rpage.attributes.has_child == true)
        ul.mt-1(clas=`${$option.unstyled ? 'list-unstyled' : ''}`)
          +lis_of_dir(rpage.meta.permalink, {s: true})

mixin embed_video(url)
  .embed-responsive.embed-responsive-16by9.video-embed
    iframe(src=url,allowfullscreen="allowfullscreen",frameborder="0",gesture="media",allow="encrypted-media").embed-responsive-item
mixin embed_nicovideo(vid)
  +embed_video(`https://embed.nicovideo.jp/watch/${vid}`)
mixin embed_youtube(vid)
  +embed_video(`https://www.youtube.com/embed/${vid}?controls=2&modestbranding=1&rel=0`)
mixin embed_youtube_autoplay(vid)
  +embed_video(`https://www.youtube.com/embed/${vid}?autoplay=1&controls=2&modestbranding=1&rel=0`)

//- https://developers.google.com/youtube/player_parameters?hl=ja

mixin i18n(target, strs)
  | #{i18n(target, strs)}

mixin blog_badges(targetpage)
  div.mr-2
    +fa_fw("folder-open")
    if(targetpage.attributes.categories)
      each category in targetpage.attributes.categories
        span.badge.badge-success.md-small= category
        |  
    else
      +i18n('null')
  div.mr-2
    +fa_fw("tags")
    if(targetpage.attributes.tags)
      each tag in targetpage.attributes.tags
        span.badge.badge-secondary.md-small= tag
        |  
    else
      +i18n('null')

mixin mfm_example(src)
  .bg-light
    .mk-mfm-example.p-2
      p.m-0.p-0.small.font-weight-bold Text
      textarea.mb-2.bg-white(rows=(src.split('\n').length - 1) readonly)!=src
      p.m-0.p-0.small.font-weight-bold Preview
      .mk-note.bg-white!=mfmf.render(src, {baseUrl: '?'})

mixin instancesList(o, colors, sctrollts)
  .instances-list.list-group(class=(scrollts ? `scrollts scrollts-${scrollts}` : ''))
    -
      let c = colors ? `text-${colors[0]} bg-${colors[2]}` : ''
      let c2 = colors ? `text-${colors[1]}` : 'text-muted'
      let lgrgb = colors && colors[3] == 'dark' ? '52, 58, 64' : '255, 255, 255'
    each instance, r in instances
      -
        let iinfo = instancesInfos[r]
        let ilang = instance.langs ? instance.langs.some(e => e == locale) : true
        let iregi = iinfo && (iinfo.meta.features ? iinfo.meta.features.registration : !iinfo.meta.disableRegistration)
        let itype = true
        switch(o){
          case 'selected':
            itype = (instance.suspended !== undefined ? !instance.suspended : iinfo) && iregi && !!instance.selected
            break
          case 'nonselected':
            itype = (instance.suspended !== undefined ? !instance.suspended : iinfo) && iregi && !instance.selected
            break
          case 'suspended':
            itype = (instance.suspended !== undefined ? instance.suspended : !iinfo)
            break
          case 'registration-closed':
            itype = (instance.suspended !== undefined ? !instance.suspended : iinfo) && !iregi
            break
        }

      if(ilang && itype)
        - let s = iinfo && iinfo.meta.bannerUrl ? `background: linear-gradient(rgb(${lgrgb}, .6), rgba(${lgrgb}, .9)), url('${iinfo.meta.bannerUrl}'); background-size: cover; background-clip: padding-box; background-position: center;` : ''
        a(href=`https://${instance.url}` target="_blank" rel="noopener" class=c style=s).instance.list-group-item.list-group-item-action.flex-column.align-items-start
          h4.jm-h4.noindex
            | #{instance.name || (iinfo && iinfo.meta.name && iinfo.meta.name != 'Misskey' && iinfo.meta.name != instance.url) ? `${instance.name || iinfo.meta.name}<span class="${c2} font-weight-normal"> - ${instance.url}</span>` : instance.url}
          p.my-1.lh-12 #{instance.description || (iinfo && iinfo.description ? iinfo.description.slice(0, 70) : '')}#{iinfo && iinfo.description && iinfo.description.length > 70 ? 'â€¦' : ''}
          .instance-infos.d-flex.flex-wrap.small(class=c2)
            if(iinfo)
              if(!iregi)
                abbr(title=i18n('instance_registrationDisabled'))
                  +fa_fw('lock')
              else
                abbr(title=i18n('instance_registrationEnabled'))
                  +fa_fw('lock-open')
              if(iinfo.meta.features)
                if( !iinfo.meta.features.localTimeLine )
                  abbr(title=i18n('instance_localTimeLineDisabled')).opacity-050
                    +fa_fw('comments')
                else
                  abbr(title=i18n('instance_localTimeLineEnabled'))
                    +fa_fw('comments')
                if( iinfo.meta.features.elasticsearch )
                  abbr(title=i18n('instance_elasticsearchEnabled'))
                    +fa_fw('search')
                else
                  abbr(title=i18n('instance_elasticsearchDisabled')).opacity-050
                    +fa_fw('search')
                if( iinfo.meta.features.recaptcha )
                  abbr(title=i18n('instance_recaptchaEnabled'))
                    +fa_fw('shield-alt')
                else
                  abbr(title=i18n('instance_recaptchaDisabled')).opacity-050
                    +fa_fw('shield-alt')
                if( iinfo.meta.features.objectStorage )
                  abbr(title=i18n('instance_objectStorageEnabled'))
                    +fa_fw('cube')
                else
                  abbr(title=i18n('instance_objectStorageDisabled')).opacity-050
                    +fa_fw('cube')
                if( iinfo.meta.features.twitter )
                  abbr(title=i18n('instance_twitterEnabled'))
                    +fa_fw('twitter', 'fab')
                else
                  abbr(title=i18n('instance_twitterDisabled')).opacity-050
                    +fa_fw('twitter', 'fab')
                if( iinfo.meta.features.serviceWorker )
                  abbr(title=i18n('instance_serviceWorkerEnabled'))
                    +fa_fw('bell')
                else
                  abbr(title=i18n('instance_serviceWorkerDisabled')).opacity-050
                    +fa_fw('bell')
          .instance-infos.d-flex.flex-wrap.small(class=c2)
            if(iinfo)
              if(iinfo.stats.originalUsersCount)
                - const users = iinfo.stats.originalUsersCount
                .instance-infos-item.mr-2
                  abbr(title=i18n('instance_users'))
                    +fa_fw('users')
                  |  #{numeral(users).format(users >= 10000 ? '0.0a' : '0,0')}
              if(iinfo.stats.originalNotesCount)
                - const notes = iinfo.stats.originalNotesCount
                .instance-infos-item.mr-2
                  abbr(title=i18n('instance_notes'))
                    +fa_fw('pencil-alt')
                  |  #{numeral(notes).format(notes >= 10000 ? '0.0a' : '0,0')}
              if(iinfo.meta.driveCapacityPerLocalUserMb)
                .instance-infos-item.mr-2
                  abbr(title=i18n('instance_driveCapacityPerLocalUser'))
                    +fa_fw('hdd')
                  |  #{numeral(iinfo.meta.driveCapacityPerLocalUserMb + 'MB').format('0.0b')}
              if(iinfo.meta.version)
                .instance-infos-item.mr-2 v#{iinfo.meta.version}
              if(iinfo.meta.maintainer)
                .instance-infos-item
                  abbr(title=i18n('instance_maintainer'))
                    +fa_fw('user-cog')
                  |  #{iinfo.meta.maintainer.name}
    
    else
      +i18n('none')
